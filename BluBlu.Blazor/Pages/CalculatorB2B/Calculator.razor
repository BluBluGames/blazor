@page "/calculator-b2b"
@layout AdminLayout
@using MediatR
@using BluBlu.Blazor.Shared.Layouts
@inject IMediator _mediator

<div class="form__group">
    <input type="number" @onchange="CalculateByHourlyNet" class="form__field" id='hourly_rate' placeholder="Hourly rate Net" value="@_hourlyNet"/>
    <label for="hourly_rate" class="form__label">Hourly rate Net</label>
</div>
<div class="form__group">
    <input type="number" @onchange="CalculateByHourlyNet" class="form__field" id='hours' placeholder="Hours worked" value="@_hours"/>
    <label for="hours" class="form__label">Hourly rate Net</label>
</div>
<div class="form__group">
    <input type="number" @onchange="CalculateByMonthlyNet" class="form__field" id='fv_net_amount' placeholder="FV Net Amount" value="@_monthlyNet"/>
    <label for="fv_net_amount" class="form__label">FV Net Amount</label>
</div>
<p>Hourly Net = @_hourlyNet</p>
<p>Monthly Net = @_monthlyNet</p>
<p>Calculated FV = @_calculatedValuePlusVat</p>

@code {
    private decimal _monthlyNet;
    private decimal _hourlyNet;
    private decimal _hours;
    
    private decimal _calculatedValuePlusVat;
        
    private void CalculateByHourlyNet(ChangeEventArgs args)
    {
        if (string.IsNullOrWhiteSpace(args.Value.ToString()) == false)
        {
            var sanitizedInput = new string(args.Value!.ToString()!
                .Where(c => char.IsDigit(c) || char.IsAscii('.') || char.IsAscii(','))
                .ToArray());
        
            var hours = 168;
            _hourlyNet = decimal.Parse(sanitizedInput);
            _monthlyNet = _hourlyNet * hours;
            _calculatedValuePlusVat = _hourlyNet * hours + _hourlyNet * hours * 23 / 100;
        }
        else
        {
            _hourlyNet = 0;
            _monthlyNet = 0;
            _calculatedValuePlusVat = 0;
        }
    }

    private void CalculateByMonthlyNet(ChangeEventArgs args)
    {
        if (string.IsNullOrWhiteSpace(args.Value.ToString()) == false)
        {        
            var sanitizedInput = new string(args.Value!.ToString()!
            .Where(c => char.IsDigit(c) || char.IsAscii('.') || char.IsAscii(','))
            .ToArray());
        
            var hours = 168;
            _monthlyNet = decimal.Parse(sanitizedInput);
            _hourlyNet = _monthlyNet / hours;
            _calculatedValuePlusVat = _monthlyNet + _monthlyNet * 23 / 100;
        }
        else
        {
            _hourlyNet = 0;
            _monthlyNet = 0;
            _calculatedValuePlusVat = 0;
        }

    }
}