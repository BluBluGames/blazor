@page "/view-country-exchange-valuation"
@using MediatR

@using BluBlu.Stocks.Domain.Services.PriceValuationService.GetCountryPriceValuation
@inject IMediator _mediator

@if (_countryValuation == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <div>
        <p>Name: @_countryValuation.Name</p>
        <p>DividendYield: @_countryValuation.DividendYield.ToString()%</p>
        <p>DividendYieldValuation: @_countryValuation.DividendYieldValuation</p>
        <p>PEValuation: @_countryValuation.PEValuation</p>
        <p>PBVValuation: @_countryValuation.PBVValuation</p>
        <p>CAPEValuation: @_countryValuation.CAPEValuation</p>
    </div>
}




@code {
    private CountryPriceValuationResponse _countryValuation;
    private string Error { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _countryValuation = await GetValuation();
        }
        catch (Exception e)
        {
            Error = e.Message;
            Console.WriteLine(e);
        }
    }
    
    private async Task<CountryPriceValuationResponse> GetValuation()
    {
        return await _mediator.Send(new GetCountryPriceValuationByIdQuery { Id = "622855fe20095ae17e0ab4a4"});
    }
}